services:
  config-server:
    image: webpos-config-server:latest
    build:
      context: .
      dockerfile: webpos-config-server.Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-I", "http://config-server:20151"]
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 512M

  discovery-server:
    image: webpos-discovery-server:latest
    build:
      context: .
      dockerfile: webpos-discovery-server.Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://discovery-server:8761" ]
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "8761:8761"

  seata-server:
    image: seataio/seata-server:latest
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://seata-server:7091" ]
      interval: 5s
      timeout: 10s
      retries: 10

  products-service-db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: nlcf8k-15dn2w
      MYSQL_DATABASE: products
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - ./database/products-service-db-init.sql:/docker-entrypoint-initdb.d/products-service-db-init.sql

  orders-service-db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: gbhre2-fdnji8
      MYSQL_DATABASE: orders
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - ./database/orders-service-db-init.sql:/docker-entrypoint-initdb.d/orders-service-db-init.sql

  products-cache-server:
    image: "redis:latest"

  products-service:
    image: webpos-products-service:latest
    build:
      context: .
      dockerfile: webpos-products-service.Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      products-service-db:
        condition: service_healthy
      seata-server:
        condition: service_healthy
      products-cache-server:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: 1.0
      mode: replicated
      replicas: 4
      endpoint_mode: dnsrr

  orders-service:
    image: webpos-orders-service:latest
    build:
      context: .
      dockerfile: webpos-orders-service.Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      orders-service-db:
        condition: service_healthy
      seata-server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 4.0

  api-gateway:
    image: webpos-api-gateway:latest
    build:
      context: .
      dockerfile: webpos-api-gateway.Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - "8080:8080"